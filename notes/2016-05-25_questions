- Can a subject be related to one distinct blank node via different predicates?
- maybe provide an own implemantion of msg?
- why are there blank nodes as subjects that are not referenced as objects?
	- "why not?"
- subgraphs from graphs
- data structure for msgs?
	-> store graphs in files (with graph ids (which would act like hashes?))
- what are the use cases for the msgs? does it even make sense to use a data structure?
- how can a user add blank nodes to the system?
	- we should maybe define a list of all possible use cases

	--> the user should be able to edit the graph in any way possible

- msg --> primarily for update instructions
- msg could be also used for:
	- stateless server (in case we can properly hash an msg)
		- we can't hash atm
		- what about hash collisions?
	- frontend templating: if there is a blank node as object, group triple where blank nodes are subject below it (recursively)



- hashing:
	- store as graph
	- order
	- serialize

- we are missing triples at the moment (because the resource might neither be subject nor object
	- list all subjects

MSG Generation:
1) packe jedes tripel in einen eigenen MSG
2) wenn bnode in tripel: merge mit anderen tripel mit gleichen bnodes

nlogn